# refer to https://newsapi.org/docs/endpoints/top-headlines for types from the API doc

type Query {
  # This query is for showcasing the hottest trends on the homepage
  displayTrendingArticles: [Article]! # must be an array of non-null
  # Query to get a category by a given string
  getCategory(category: String!): [Article!]!
  # Query which fetches a single article with the provided title
  getSingleArticle(title: String!): Article
  # Query to fetch an array of related articles based on the based in question query
  getArticlesBasedOnSearch(question: String!): [Article]!
  # This will return the currently signed in user
  me: User!
}

type Mutation {
  # Mutation to log in the user - returns an Auth object which will update the cookies
  login(email: String!, password: String!): Auth!
  # Mutation to sign up the user - returns an Auth object which will update the cookies
  signUp(name: String!, email: String!, password: String!): Auth!
}

type Article {
  # The headline or title of the article.
  title: String!
  # The date and time that the article was published, in UTC (+000).
  publishedAt: String!
  # The source from which this article originated.
  source: Source!
  # The direct URL to the article. Used to associate comments.
  url: String!
  # A description or snippet from the article.
  description: String
  # The unformatted content of the article (where available). This is truncated to 200 characters.
  content: String
  # The URL to a relevant image for the article.
  image: String
  # The author of the article. Can be null.
  author: String
  # Fetches all comments related to this article by matching the URL.
  comments: [Comment]
}

# Represents the source of the article.
type Source {
  # The display name of the source.
  name: String!
  # The identifier of the source. Can be null.
  id: String
}

type User {
  # ID field. Will be populated from MongoDB
  id: ID!
  # Name of the user
  name: String!
  # The user's email
  email: String!
  # The user's past comments
  comments: [Comment]
}

type Auth {
  # The user that was authenticated
  user: User!
  # The token that was generated for the user
  token: String!
}

# Represents a user comment on an article
type Comment {
  # Unique identifier for the comment
  id: ID!
  # The URL of the article this comment belongs to (instead of an article ID)
  articleUrl: String!
  # The text content of the comment
  content: String!
  # The user who wrote the comment
  user: User!
  # Number of upvotes the comment has received
  upvote: Int
  # Number of downvotes the comment has received
  downvote: Int
}
